#include <iostream>
#include <cstring>
using namespace std;

bool isPalindrome(const char* s, int i, int j) {
    while (i < j) {
        if (s[i] != s[j])
            return false;
        i++;
        j--;
    }
    return true;
}

void longestPalindrome(char s[], char result[]) {
    int maxLen = 0;
    int len = strlen(s);

    for (int i = 0; i < len; ++i) {
        for (int j = i; j < len; ++j) {
            if (isPalindrome(s, i, j)) {
                int currLen = j - i + 1;
                if (currLen > maxLen) {
                    maxLen = currLen;
                    strncpy(result, s + i, maxLen);
                }
            }
        }
    }
}

int main() {
    char input[] = "apadeified";
    char result[100];

    longestPalindrome(input, result);
    cout << "Longest Palindromic Substring: " << result << endl;

    return 0;
}
