#include <stdio.h>

// Function to merge two sorted arrays
void mergeSortedArrays(int* arr1, int n1, int* arr2, int n2, int result[]) {
    int i = 0, j = 0, k = 0;

    // Merge arrays until one of them is exhausted
    while (i < n1 && j < n2) {
        printf("Comparing arr1[%d] = %d and arr2[%d] = %d\n", i, arr1[i], j, arr2[j]);
        
        if (arr1[i] < arr2[j]) {
            result[k] = arr1[i];
            printf("Inserting %d from arr1 into result[%d]\n", arr1[i], k);
            i++;
        } else {
            result[k] = arr2[j];
            printf("Inserting %d from arr2 into result[%d]\n", arr2[j], k);
            j++;
        }
        k++;
    }

    // Copy remaining elements of arr1, if any
    while (i < n1) {
        result[k] = arr1[i];
        printf("Inserting remaining %d from arr1 into result[%d]\n", arr1[i], k);
        i++;
        k++;
    }

    // Copy remaining elements of arr2, if any
    while (j < n2) {
        result[k] = arr2[j];
        printf("Inserting remaining %d from arr2 into result[%d]\n", arr2[j], k);
        j++;
        k++;
    }
}

// Function to print an array
void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr1[] = {1, 3, 5, 8, 13};
    int arr2[] = {5, 9, 10, 12};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    int n2 = sizeof(arr2) / sizeof(arr2[0]);

    // Result array to store merged elements
    int result[n1 + n2];

    // Call merge function
    mergeSortedArrays(arr1, n1, arr2, n2, result);

    // Print the merged array
    printf("Merged Sorted Array: \n");
    printArray(result, n1 + n2);

    return 0;
}
