#include <iostream>
#include <queue>
#include <vector>
#include <functional>

int main() {
    // Initialization with default comparator (max-heap)
    std::priority_queue<int> maxHeap;

    // Modifiers
    maxHeap.push(10);
    maxHeap.push(20);
    maxHeap.push(15);

    // Element access
    std::cout << "Top element (max): " << maxHeap.top() << std::endl;

    // Capacity
    std::cout << "Priority queue size: " << maxHeap.size() << std::endl;
    std::cout << "Is priority queue empty? " << (maxHeap.empty() ? "Yes" : "No") << std::endl;

    // Pop elements
    while (!maxHeap.empty()) {
        std::cout << "Removing: " << maxHeap.top() << std::endl;
        maxHeap.pop();
    }

    // Initialization with custom comparator (min-heap)
    std::priority_queue<int, std::vector<int>, std::greater<int>> minHeap;
    minHeap.push(10);
    minHeap.push(20);
    minHeap.push(15);

    std::cout << "Top element (min): " << minHeap.top() << std::endl;

    return 0;
}
