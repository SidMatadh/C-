C++11
C++11 was a major update that introduced several game-changing features which made C++ both easier to use and more powerful. Some of the key features include:

Auto: Automatic type deduction of variables.
Range-based for loops: Simplified syntax for iterating over containers.
Lambda expressions: Support for anonymous functions, which can capture variables from the surrounding context.
Smart pointers: std::unique_ptr, std::shared_ptr, and std::weak_ptr for automatic and more reliable memory management.
Move semantics: Introduced to optimize resource management, particularly in container classes, with move constructors and move assignment operators.
Concurrency support: New memory model and concurrent execution features including threads, mutexes, and condition variables.
nullptr: A type-safe null pointer constant.
Uniform initialization: Unified syntax for initializing any object.

C++14
Lambda with auto para
make_unique
constexpr
auto return type

C++17
Structured binding
optional
if constexpr
inline static

