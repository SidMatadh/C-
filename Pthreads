#include <iostream>
#include <thread>
#include <mutex>
#include <condition_variable>

std::mutex mtx;
std::condition_variable cv;
bool printOddFlag = true;

void printEven() {
    for (int i = 2; i <= 10; i += 2) {
        std::unique_lock<std::mutex> lock(mtx);
        while (printOddFlag) {
            cv.wait(lock);
        }
        std::cout << i << std::endl;
        printOddFlag = true;
        cv.notify_all();
    }
}

void printOdd() {
    for (int i = 1; i <= 9; i += 2) {
        std::unique_lock<std::mutex> lock(mtx);
        while (!printOddFlag) {
            cv.wait(lock);
        }
        std::cout << i << std::endl;
        printOddFlag = false;
        cv.notify_all();
    }
}

int main() {
    std::thread thread1(printEven);
    std::thread thread2(printOdd);

    thread1.join();
    thread2.join();

    return 0;
}
